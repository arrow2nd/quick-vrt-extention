class J{capturedData={};constructor(){this.init()}init(){this.setupEventListeners()}setupEventListeners(){chrome.runtime.onInstalled.addListener((w)=>{if(w.reason==="install")console.log("Quick VRT Extension がインストールされました"),this.initializeStorage();else if(w.reason==="update")console.log("Quick VRT Extension がアップデートされました"),this.handleUpdate(w.previousVersion||"")}),chrome.runtime.onMessage.addListener((w,z,A)=>{return this.handleMessage(w,z,A),!0}),chrome.tabs.onUpdated.addListener((w,z,A)=>{if(z.status==="complete")this.handleTabUpdate(w,A)}),chrome.action.onClicked.addListener((w)=>{this.openExtensionInTab()}),chrome.contextMenus.onClicked.addListener((w,z)=>{this.handleContextMenuClick(w,z)}),this.createContextMenus()}async openExtensionInTab(){let w=chrome.runtime.getURL("popup.html");await chrome.tabs.create({url:w})}async initializeStorage(){try{let w={captureDelay:1,imageQuality:"medium",autoScroll:!1,diffThreshold:0.1,diffColor:"#ff0000"};await chrome.storage.local.set({vrtSettings:w,vrtHistory:[]}),console.log("ストレージが初期化されました")}catch(w){console.error("ストレージ初期化エラー:",w)}}async handleUpdate(w){try{if(!(await chrome.storage.local.get(["vrtSettings","vrtHistory"])).vrtSettings)await this.initializeStorage();console.log(`v${w} から更新されました`)}catch(z){console.error("アップデート処理エラー:",z)}}async handleMessage(w,z,A){try{switch(w.type){case"CAPTURE_SCREENSHOT":let C=await this.captureScreenshot(w.options);A({success:!0,data:C});break;case"CAPTURE_SCREENSHOT_TAB":let F=await this.captureScreenshotFromTab(w.tabId,w.options);A({success:!0,data:F});break;case"STORE_CAPTURE":if(w.captureType==="before")this.capturedData.before=w.data;else this.capturedData.after=w.data;A({success:!0});break;case"GET_STORED_CAPTURES":A({success:!0,data:this.capturedData});break;case"CLEAR_STORED_CAPTURES":this.capturedData={},A({success:!0});break;case"GET_TAB_INFO":let D=await this.getTabInfo(w.tabId);A({success:!0,data:D});break;case"GET_ALL_TABS":let E=await chrome.tabs.query({});A({success:!0,data:E});break;case"OPEN_IN_TAB":await this.openExtensionInTab(),A({success:!0});break;case"INJECT_CONTENT_SCRIPT":await this.injectContentScript(w.tabId),A({success:!0});break;case"PREPARE_PAGE_FOR_CAPTURE":await this.preparePageForCapture(w.tabId,w.options),A({success:!0});break;default:A({success:!1,error:"Unknown message type"})}}catch(C){console.error("メッセージ処理エラー:",C),A({success:!1,error:C.message})}}async captureScreenshotFromTab(w,z={}){try{let A=await chrome.tabs.get(w);if(!A)throw new Error("タブが見つかりません");if(await chrome.tabs.update(w,{active:!0}),await new Promise((D)=>setTimeout(D,500)),z.prepareCapture)await this.preparePageForCapture(w,z);let C={format:"png",quality:this.getImageQuality(z.imageQuality)};return{dataUrl:await new Promise((D,E)=>{chrome.tabs.captureVisibleTab(A.windowId,C,(G)=>{if(chrome.runtime.lastError)E(new Error(chrome.runtime.lastError.message));else if(G)D(G);else E(new Error("スクリーンショットの撮影に失敗しました"))})}),timestamp:Date.now(),tabInfo:{id:A.id,url:A.url,title:A.title}}}catch(A){throw console.error("タブスクリーンショット撮影エラー:",A),A}}async captureScreenshot(w={}){try{let[z]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!z||!z.id)throw new Error("アクティブなタブが見つかりません");return await this.captureScreenshotFromTab(z.id,w)}catch(z){throw console.error("スクリーンショット撮影エラー:",z),z}}getImageQuality(w){switch(w){case"high":return 100;case"medium":return 80;case"low":return 60;default:return 80}}async getTabInfo(w){try{let z=await chrome.tabs.get(w);return{id:z.id,url:z.url,title:z.title,favIconUrl:z.favIconUrl,status:z.status}}catch(z){throw console.error("タブ情報取得エラー:",z),z}}async injectContentScript(w){try{await chrome.scripting.executeScript({target:{tabId:w},files:["content.js"]})}catch(z){throw console.error("コンテンツスクリプト注入エラー:",z),z}}async preparePageForCapture(w,z){try{if(await chrome.tabs.sendMessage(w,{type:"PREPARE_FOR_CAPTURE",options:z}),z.captureDelay&&z.captureDelay>0)await new Promise((A)=>setTimeout(A,z.captureDelay*1000))}catch(A){console.error("ページ準備エラー:",A)}}handleTabUpdate(w,z){}createContextMenus(){try{chrome.contextMenus.removeAll(()=>{chrome.contextMenus.create({id:"quick-vrt-main",title:"Quick VRT",contexts:["page"]}),chrome.contextMenus.create({id:"quick-vrt-capture-before",parentId:"quick-vrt-main",title:"Beforeスクリーンショットを撮影",contexts:["page"]}),chrome.contextMenus.create({id:"quick-vrt-capture-after",parentId:"quick-vrt-main",title:"Afterスクリーンショットを撮影",contexts:["page"]}),chrome.contextMenus.create({id:"quick-vrt-separator",parentId:"quick-vrt-main",type:"separator",contexts:["page"]}),chrome.contextMenus.create({id:"quick-vrt-open-tab",parentId:"quick-vrt-main",title:"VRTツールをタブで開く",contexts:["page"]})})}catch(w){console.error("コンテキストメニュー作成エラー:",w)}}async handleContextMenuClick(w,z){try{if(!z)return;switch(w.menuItemId){case"quick-vrt-capture-before":await this.handleQuickCapture("before",z);break;case"quick-vrt-capture-after":await this.handleQuickCapture("after",z);break;case"quick-vrt-open-tab":await this.openExtensionInTab();break}}catch(A){console.error("コンテキストメニュー処理エラー:",A)}}async handleQuickCapture(w,z){try{let A=await this.captureScreenshotFromTab(z.id,{});if(w==="before")this.capturedData.before=A;else this.capturedData.after=A;chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Quick VRT",message:`${w}スクリーンショットを撮影しました`})}catch(A){console.error(`${w}キャプチャエラー:`,A),chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Quick VRT - エラー",message:`${w}スクリーンショットの撮影に失敗しました`})}}async performMaintenance(){try{let w=await chrome.storage.local.get(["vrtHistory"]);if(w.vrtHistory&&w.vrtHistory.length>50){let z=w.vrtHistory.slice(0,50);await chrome.storage.local.set({vrtHistory:z})}this.capturedData={}}catch(w){console.error("メンテナンス処理エラー:",w)}}}var K=new J;chrome.alarms.create("maintenance",{periodInMinutes:1440});chrome.alarms.onAlarm.addListener((w)=>{if(w.name==="maintenance")K.performMaintenance()});

//# debugId=E8B6623087D12C0F64756E2164756E21
//# sourceMappingURL=background.js.map
